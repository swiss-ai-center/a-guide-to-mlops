base_tmp_path: tmp/
base_md_path: docs/

variables:
  TREE_CMD: tree --dirsfirst -I '*.jpg'

saves:
  part-1-local-training-and-model-evaluation/chapter-1-run-a-simple-ml-experiment-with-jupyter-notebook.md:
    save_git: false
    actions:
      # Download the notebook
      - run: wget https://github.com/csia-pme/a-guide-to-mlops/archive/refs/heads/jupyter-notebook.zip -O jupyter-notebook.zip
      - run: unzip jupyter-notebook.zip
      - run: mv a-guide-to-mlops-jupyter-notebook/* .
      - run: rm -r jupyter-notebook.zip a-guide-to-mlops-jupyter-notebook
      # Download and set up the dataset
      - run: wget https://github.com/csia-pme/a-guide-to-mlops/archive/refs/heads/59-data.zip -O data.zip
      - run: unzip data.zip
      - run: mv a-guide-to-mlops-data/ data/
      - run: rm data.zip
      # Log the codebase tree
      - run: "{{ TREE_CMD }}"
        log: true
      # Create the virtual environment
      - run: python3 -m venv .venv
      - run: . .venv/bin/activate && pip install --requirement requirements.txt

  part-1-local-training-and-model-evaluation/chapter-2-adapt-and-move-the-jupyter-notebook-to-python-scripts.md:
    save_git: false
    actions:
      # Clean the directory including hidden files
      - run: rm -rf .[!.]* *
      # Download and set up the dataset
      - run: wget https://github.com/csia-pme/a-guide-to-mlops/archive/refs/heads/59-data.zip -O data.zip
      - run: unzip data.zip
      - run: mv a-guide-to-mlops-data/ data/
      - run: rm data.zip
      # Initialize the environment
      - run: python3 -m venv .venv
      - replace_from_md:
        file: requirements.txt
        occurance_index: 0
      - run: . .venv/bin/activate && pip install --requirement requirements.txt
      - run: . .venv/bin/activate && pip freeze --local --all > requirements-freeze.txt
      # Add new files
      - replace_from_md:
        file: params.yaml
        occurance_index: 0
      - replace_from_md:
        file: src/prepare.py
        occurance_index: 0
      - replace_from_md:
        file: src/train.py
        occurance_index: 0
      - replace_from_md:
        file: src/evaluate.py
        occurance_index: 0
      - run: mkdir src/utils
      - run: touch src/utils/__init__.py
      - replace_from_md:
        file: src/utils/seed.py
        occurance_index: 0
      - replace_from_md:
        file: README.md
        occurance_index: 0
      # Log the codebase tree
      - run: "{{ TREE_CMD }}"
        log: true
      # Run the experiment
      - run: . .venv/bin/activate && python3 src/prepare.py data/raw data/prepared
      - run: . .venv/bin/activate && python3 src/train.py data/prepared model
      - run: . .venv/bin/activate && python3 src/evaluate.py model data/prepared
      # Log the codebase tree
      - run: "{{ TREE_CMD }}"
        log: true

  part-1-local-training-and-model-evaluation/chapter-3-initialize-git-and-dvc-for-local-training.md:
    save_git: false
    actions:
      # Create a new Git repository
      - run: git init --initial-branch=main
      - run: git status
        log: true
      - replace_from_md:
        file: .gitignore
        occurance_index: 0
      - run: git add .
      - run: git status
        log: true
      - run: git commit -m "My first ML experiment shared on Git"
      # Create a DVC repository
      - replace_from_md:
        file: requirements.txt
        occurance_index: 0
      - run: . .venv/bin/activate && pip install --requirement requirements.txt
      - run: . .venv/bin/activate && pip freeze --local --all > requirements-freeze.txt
      - run: git diff requirements.txt
        log: true
      - run: . .venv/bin/activate && dvc init
      - replace_from_md:
        file: .gitignore
        occurance_index: 1
      - run: git diff .gitignore
        log: true
      - run: . .venv/bin/activate && dvc add data/raw/
        log: true
      - run: git add .
      - run: git status
        log: true
      - run: git commit -m "My ML experiment data is saved with DVC"

  part-1-local-training-and-model-evaluation/chapter-4-reproduce-the-ml-experiment-with-dvc.md:
    save_git: false
    actions:
      - replace_from_md:
        file: .gitignore
        occurance_index: 0
      - run: git diff .gitignore
        log: true
      - run: |-
          . .venv/bin/activate && dvc stage add -n prepare \
            -p prepare \
            -d src/prepare.py -d src/utils/seed.py -d data/raw \
            -o data/prepared \
            python3 src/prepare.py data/raw data/prepared
      - run: |-
          . .venv/bin/activate && dvc stage add -n train \
            -p train \
            -d src/train.py -d src/utils/seed.py -d data/prepared \
            -o model \
            python3 src/train.py data/prepared model
      - run: |-
          . .venv/bin/activate && dvc stage add -n evaluate \
            -d src/evaluate.py -d model \
            --metrics evaluation/metrics.json \
            --plots evaluation/plots/confusion_matrix.png \
            --plots evaluation/plots/pred_preview.png \
            --plots evaluation/plots/training_history.png \
            python3 src/evaluate.py model data/prepared
      - run: . .venv/bin/activate && dvc dag
        log: true
      - run: . .venv/bin/activate && dvc repro
      - run: git add .
      - run: git status
        log: true
      - run: git commit -m "My ML experiment commands are saved with DVC"

  part-1-local-training-and-model-evaluation/chapter-5-track-model-evolution-with-dvc.md:
    save_git: false
    actions:
      - replace_from_md:
        file: params.yaml
        occurance_index: 0
      - run: git diff params.yaml
        log: true
      - run: . .venv/bin/activate && dvc repro
      - run: . .venv/bin/activate && dvc params diff
        log: true
      - run: . .venv/bin/activate && dvc metrics diff
        log: true
      - run: . .venv/bin/activate && dvc plots diff
      - replace_from_md:
        file: .gitignore
        occurance_index: 0
      - run: git diff .gitignore
        log: true
      - run: git add .
      - run: git status
        log: true
      - run: git commit -m "My ML experiment changes are tracked"

  part-2-move-the-model-to-the-cloud/chapter-6-move-the-ml-experiment-data-to-the-cloud.md:
    save_git: false
    actions:
      - replace_from_md:
        file: requirements.txt
        occurance_index: 0
      - run: . .venv/bin/activate && pip install --requirement requirements.txt
      - run: . .venv/bin/activate && pip freeze --local --all > requirements-freeze.txt
      - run: git diff requirements.txt
        log: true
      - run: . .venv/bin/activate && dvc remote add -d data gs://mlopsdemo/dvcstore
      - run: . .venv/bin/activate && dvc push
      - run: git add .
      - run: git status
        log: true
      - run: git commit -m "My ML experiment data is saved with DVC"

  part-2-move-the-model-to-the-cloud/chapter-7-move-the-ml-experiment-code-to-the-cloud.md:
    save_git: true
    actions:

  part-2-move-the-model-to-the-cloud/chapter-8-reproduce-the-ml-experiment-in-a-cicd-pipeline.md:
    save_git: true
    actions:
      - replace_from_md:
        file: .github/workflows/mlops.yml
        occurance_index: 0
      - replace_from_md:
        file: .gitlab-ci.yml
        occurance_index: 0
      - run: git add .github/workflows/mlops.yml
      - run: git add .gitlab-ci.yml
      - run: git commit -m "A pipeline will run my experiment on each push"

  part-2-move-the-model-to-the-cloud/chapter-9-track-model-evolution-in-the-cicd-pipeline-with-cml.md:
    save_git: true
    actions:
      - replace_from_md:
        file: .github/workflows/mlops.yml
        occurance_index: 0
      - run: git diff .github/workflows/mlops.yml
        log: true
      - replace_from_md:
        file: .gitlab-ci.yml
        occurance_index: 0
      - run: git diff .gitlab-ci.yml
        log: true
      - run: git add .github/workflows/mlops.yml
      - run: git add .gitlab-ci.yml
      - run: git commit -m "Enable CML reports on pull requests"
      - run: git checkout -b cml-report
      - replace_from_md:
        file: params.yaml
        occurance_index: 0
      - run: git diff params.yaml
        log: true
      - run: git add .
      - run: git status
        log: true
      - run: . .venv/bin/activate && dvc push
      - run: git commit -m "I made some changes to the model"
      - run: git checkout main
      - run: git merge cml-report

  part-3-serve-and-deploy-the-model/chapter-10-save-and-load-the-model-with-mlem/index.md:
    save_git: true
    actions:
      - replace_from_md:
        file: requirements.txt
        occurance_index: 0
      - run: . .venv/bin/activate && pip install --requirement requirements.txt
      - run: . .venv/bin/activate && pip freeze --local --all > requirements-freeze.txt
      - run: git diff requirements.txt
        log: true
      - run: . .venv/bin/activate && mlem init
      - run: . .venv/bin/activate && mlem config set core.storage.type dvc
      - run: echo "/**/?*.mlem" >> .dvcignore
      - replace_from_md:
        file: src/train.py
        occurance_index: 0
      - run: git diff src/train.py
        log: true
      - replace_from_md:
        file: src/evaluate.py
        occurance_index: 0
      - run: git diff src/evaluate.py
        log: true
      - run: . .venv/bin/activate && dvc repro
      - run: git add .
      - run: git status
        log: true
      - run: . .venv/bin/activate && dvc push
      - run: git commit -m "MLEM can save, load and serve the model"
